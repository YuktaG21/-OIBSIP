# -*- coding: utf-8 -*-
"""Oasis_task1.ipynb

Automatically generated by Colaboratory.

# *IRIS Flower Classification*
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#loading dataset
path="/content/drive/MyDrive/DATASETS/Iris.csv"
df = pd.read_csv(path)
df.head(5)

df.tail(5)

df.info()

# delete a column
df= df.drop('Id', axis=1)
df.head(5)

df.describe()

df.info()

df['Species'].value_counts()

df.isnull().sum()

"""# **EDA (Histograms & Scatterplot)**"""

df.hist(color="red", figsize=(10,10))
plt.show()

sns.pairplot(df, hue = 'Species', palette = 'autumn')
plt.show()

"""# **Coorelation Matrix**"""

df.corr()

corr = df.corr()
fig, ax= plt.subplots(figsize=(5,5))
sns.heatmap(corr, annot=True, ax=ax, cmap='coolwarm')

"""# **Label Encoder**"""

from sklearn.preprocessing import LabelEncoder
lab = LabelEncoder()

df['Species']=lab.fit_transform(df['Species'])
df.head()

"""# **Model Training**"""

from sklearn.model_selection import train_test_split
K = df.drop(columns=['Species'])
L = df['Species']
k_train, k_test, l_train, l_test = train_test_split(K,L,test_size=0.30)

from sklearn.linear_model import LogisticRegression
model = LogisticRegression()

model.fit(k_train, l_train)

print("Accuracy:", model.score(k_test, l_test))

#for KNN
from sklearn.neighbors import KNeighborsClassifier
model = KNeighborsClassifier()

model.fit(k_train, l_train)

print("Accuracy:", model.score(k_test, l_test)*100)

from sklearn.tree import DecisionTreeClassifier
model= DecisionTreeClassifier()

model.fit(k_train, l_train)

print("Accuacy:", model.score(k_test, l_test)*100)
